/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View.LogRes.ManagerEmployee;

import java.awt.Point;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import static Controller.LogRes.ManagerEmployee.Register.register;
import static Controller.LogRes.ManagerEmployee.Register.regErr;

/**
 *
 * @author ngocn
 */
public class Register extends javax.swing.JFrame {

    /**
     * Creates new form Register
     */
    private Point initialClick;

    public Register() {
        setUndecorated(true);
        setResizable(false);
        initComponents();
        setLocationRelativeTo(null);
        background.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                // Lấy tọa độ chuột khi nhấn
                initialClick = e.getPoint();
            }

        });
        background.addMouseMotionListener(new MouseAdapter() {
            @Override
            public void mouseDragged(MouseEvent e) {
                // Lấy tọa độ chuột khi kéo
                int x = getLocation().x + e.getX() - initialClick.x;
                int y = getLocation().y + e.getY() - initialClick.y;

                // Di chuyển cửa sổ đến vị trí mới
                setLocation(x, y);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        registerForm = new javax.swing.JPanel();
        register = new javax.swing.JLabel();
        username = new javax.swing.JLabel();
        password = new javax.swing.JLabel();
        passwordText = new javax.swing.JPasswordField();
        showpass = new javax.swing.JCheckBox();
        phone = new javax.swing.JLabel();
        phoneText = new javax.swing.JTextField();
        registerBtn = new javax.swing.JButton();
        exitBtn = new javax.swing.JButton();
        wnUS = new javax.swing.JLabel();
        wnP = new javax.swing.JLabel();
        wnPW = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        login = new javax.swing.JLabel();
        usernameText = new javax.swing.JTextField();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("RegisterForm");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        registerForm.setBackground(new java.awt.Color(27, 43, 32));
        registerForm.setPreferredSize(new java.awt.Dimension(475, 432));

        register.setFont(new java.awt.Font("Serif", 1, 48)); // NOI18N
        register.setForeground(new java.awt.Color(210, 154, 95));
        register.setText("Đăng ký");
        register.setToolTipText("");

        username.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        username.setForeground(new java.awt.Color(210, 154, 95));
        username.setText("Tên đăng nhập:");

        password.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        password.setForeground(new java.awt.Color(210, 154, 95));
        password.setText("Mật khẩu:");

        passwordText.setBackground(new java.awt.Color(102, 102, 102));
        passwordText.setFont(new java.awt.Font("Serif", 1, 16)); // NOI18N
        passwordText.setForeground(new java.awt.Color(210, 154, 95));
        passwordText.setText("Nhập mật khẩu");
        passwordText.setToolTipText("Nhập mật khẩu");
        passwordText.setEchoChar('\u0000');
        passwordText.setMargin(new java.awt.Insets(2, 7, 2, 6));
        passwordText.setMinimumSize(new java.awt.Dimension(290, 40));
        passwordText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                passwordTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                passwordTextFocusLost(evt);
            }
        });
        passwordText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordTextActionPerformed(evt);
            }
        });

        showpass.setBackground(new java.awt.Color(27, 43, 32));
        showpass.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        showpass.setForeground(new java.awt.Color(210, 154, 95));
        showpass.setText("Hiển thị mật khẩu");
        showpass.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                showpassStateChanged(evt);
            }
        });
        showpass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                showpassMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                showpassMouseExited(evt);
            }
        });
        showpass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showpassActionPerformed(evt);
            }
        });

        phone.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        phone.setForeground(new java.awt.Color(210, 154, 95));
        phone.setText("Số điện thoại:");

        phoneText.setBackground(new java.awt.Color(102, 102, 102));
        phoneText.setFont(new java.awt.Font("Serif", 1, 16)); // NOI18N
        phoneText.setForeground(new java.awt.Color(210, 154, 95));
        phoneText.setText("Nhập số điện thoại");
        phoneText.setToolTipText("Nhập số điện thoại");
        phoneText.setMargin(new java.awt.Insets(2, 7, 2, 6));
        phoneText.setMinimumSize(new java.awt.Dimension(290, 40));
        phoneText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                phoneTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                phoneTextFocusLost(evt);
            }
        });
        phoneText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                phoneTextMouseExited(evt);
            }
        });

        registerBtn.setBackground(new java.awt.Color(27, 43, 32));
        registerBtn.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        registerBtn.setForeground(new java.awt.Color(0, 255, 0));
        registerBtn.setText("Đăng ký");
        registerBtn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 255, 0), 2, true));
        registerBtn.setMaximumSize(new java.awt.Dimension(30, 35));
        registerBtn.setMinimumSize(new java.awt.Dimension(30, 35));
        registerBtn.setPreferredSize(new java.awt.Dimension(10, 35));
        registerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerBtnActionPerformed(evt);
            }
        });

        exitBtn.setBackground(new java.awt.Color(27, 43, 32));
        exitBtn.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        exitBtn.setForeground(new java.awt.Color(255, 0, 0));
        exitBtn.setText("Thoát");
        exitBtn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 2, true));
        exitBtn.setMaximumSize(new java.awt.Dimension(30, 35));
        exitBtn.setMinimumSize(new java.awt.Dimension(30, 35));
        exitBtn.setPreferredSize(new java.awt.Dimension(10, 35));
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });

        wnUS.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        wnUS.setForeground(new java.awt.Color(255, 0, 0));

        wnP.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        wnP.setForeground(new java.awt.Color(255, 0, 0));

        wnPW.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        wnPW.setForeground(new java.awt.Color(255, 0, 0));

        jLabel1.setFont(new java.awt.Font("Serif", 0, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Bạn đã có tài khoản?");

        login.setFont(new java.awt.Font("Serif", 1, 16)); // NOI18N
        login.setForeground(new java.awt.Color(210, 154, 95));
        login.setText("Đăng nhập");
        login.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        login.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loginMouseClicked(evt);
            }
        });

        usernameText.setBackground(new java.awt.Color(102, 102, 102));
        usernameText.setFont(new java.awt.Font("Serif", 1, 16)); // NOI18N
        usernameText.setForeground(new java.awt.Color(210, 154, 95));
        usernameText.setText("Nhập tên đăng nhập");
        usernameText.setToolTipText("Nhập tên đăng nhập");
        usernameText.setMargin(new java.awt.Insets(2, 7, 2, 6));
        usernameText.setMinimumSize(new java.awt.Dimension(290, 40));
        usernameText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                usernameTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                usernameTextFocusLost(evt);
            }
        });
        usernameText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                usernameTextMouseExited(evt);
            }
        });

        javax.swing.GroupLayout registerFormLayout = new javax.swing.GroupLayout(registerForm);
        registerForm.setLayout(registerFormLayout);
        registerFormLayout.setHorizontalGroup(
            registerFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registerFormLayout.createSequentialGroup()
                .addGroup(registerFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(registerFormLayout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addComponent(register))
                    .addGroup(registerFormLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(registerFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(registerFormLayout.createSequentialGroup()
                                .addComponent(phone)
                                .addGap(35, 35, 35)
                                .addGroup(registerFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(wnP, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(phoneText, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(registerFormLayout.createSequentialGroup()
                                .addComponent(password)
                                .addGap(70, 70, 70)
                                .addGroup(registerFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(showpass)
                                    .addComponent(wnPW, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(registerFormLayout.createSequentialGroup()
                                        .addComponent(registerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(exitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(registerFormLayout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(login))
                                    .addComponent(passwordText, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(registerFormLayout.createSequentialGroup()
                                .addComponent(username)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(registerFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(wnUS, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(usernameText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        registerFormLayout.setVerticalGroup(
            registerFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registerFormLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(register)
                .addGap(18, 18, 18)
                .addGroup(registerFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(username)
                    .addComponent(usernameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(wnUS, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(registerFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(phone)
                    .addComponent(phoneText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(wnP, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(registerFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(password)
                    .addComponent(passwordText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(showpass)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(wnPW, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(registerFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(registerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(registerFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(login))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        getContentPane().add(registerForm, new org.netbeans.lib.awtextra.AbsoluteConstraints(295, 0, 500, 432));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/background.png"))); // NOI18N
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 770, 432));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void passwordTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordTextFocusGained

        showpass.setSelected(false);
        char[] inputPassword = passwordText.getPassword();
        String enteredPassword = new String(inputPassword);
        if (enteredPassword.equals("Nhập mật khẩu")) {
            passwordText.setText("");
            passwordText.setEchoChar('\u2022');
        } else {
            passwordText.setEchoChar('\u2022');
        }
    }//GEN-LAST:event_passwordTextFocusGained

    private void showpassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showpassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_showpassActionPerformed

    private void passwordTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordTextFocusLost
        char[] inputPassword = passwordText.getPassword();
        String enteredPassword = new String(inputPassword);

        if (enteredPassword.equals("")) {
            passwordText.setEchoChar('\u0000');
            passwordText.setText("Nhập mật khẩu");
        }
    }//GEN-LAST:event_passwordTextFocusLost

    private void passwordTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordTextActionPerformed

    private void showpassMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showpassMouseClicked

    }//GEN-LAST:event_showpassMouseClicked

    private void phoneTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_phoneTextFocusGained
        if (phoneText.getText().equals("Nhập số điện thoại")) {
            phoneText.setText("");
        }
    }//GEN-LAST:event_phoneTextFocusGained

    private void phoneTextMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_phoneTextMouseExited


    }//GEN-LAST:event_phoneTextMouseExited

    private void phoneTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_phoneTextFocusLost
        if (phoneText.getText().equals("")) {
            phoneText.setText("Nhập số điện thoại");
        }
    }//GEN-LAST:event_phoneTextFocusLost

    private void showpassMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showpassMouseExited


    }//GEN-LAST:event_showpassMouseExited

    private void showpassStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_showpassStateChanged

        char[] inputPassword = passwordText.getPassword();
        String enteredPassword = new String(inputPassword);
        if (!enteredPassword.equals("Nhập mật khẩu")) {
            if (showpass.isSelected()) {
                passwordText.setEchoChar('\u0000');
            } else {
                passwordText.setEchoChar('\u2022');
            }
        }

    }//GEN-LAST:event_showpassStateChanged

    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        new Thread(new Runnable() {
            @Override
            public void run() {
                new Login().setVisible(true);
            }
        }).start();
        dispose();
    }//GEN-LAST:event_exitBtnActionPerformed

    private void loginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginMouseClicked

        new Thread(new Runnable() {
            @Override
            public void run() {
                new Login().setVisible(true);
            }
        }).start();
        dispose();
    }//GEN-LAST:event_loginMouseClicked

    private void registerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerBtnActionPerformed

        String username = usernameText.getText();
        String password = String.valueOf(passwordText.getPassword());
        String phone = phoneText.getText();
        if ((username.equals("") || username.equals("Nhập tên đăng nhập"))
                && (password.equals("") || password.equals("Nhập mật khẩu"))
                && (phone.equals("") || phone.equals("Nhập số điện thoại"))) {
            wnUS.setText("Tên đăng nhập không được trống!!!");
            wnPW.setText("Mật khẩu không được trống!!!");
            wnP.setText("Số điện thoại không được trống!!!");
        } else if ((username.equals("") || username.equals("Nhập tên đăng nhập"))
                && (password.equals("") || password.equals("Nhập mật khẩu"))) {
            wnUS.setText("Tên đăng nhập không được trống!!!");
            wnPW.setText("Mật khẩu không được trống!!!");
            if (!phone.matches("\\d{10}")) {
                wnP.setText("Số điện thoại không hộp lệ!!!");
            } else {
                wnP.setText("");
            }
        } else if ((username.equals("") || username.equals("Nhập tên đăng nhập"))
                && (phone.equals("") || phone.equals("Nhập số điện thoại"))) {
            wnUS.setText("Tên đăng nhập không được trống!!!");
            wnPW.setText("");
            wnP.setText("Số điện thoại không được trống!!!");
        } else if ((password.equals("") || password.equals("Nhập mật khẩu"))
                && (phone.equals("") || phone.equals("Nhập số điện thoại"))) {
            wnUS.setText("");
            wnPW.setText("Mật khẩu không được trống!!!");
            wnP.setText("Số điện thoại không được trống!!!");
        } else if ((username.equals("") || username.equals("Nhập tên đăng nhập"))) {
            wnUS.setText("Tên đăng nhập không được trống!!!");
            wnPW.setText("");
            if (!phone.matches("\\d{10}")) {
                wnP.setText("Số điện thoại không hộp lệ!!!");
            } else {
                wnP.setText("");
            }
        } else if ((password.equals("") || password.equals("Nhập mật khẩu"))) {
            wnUS.setText("");
            wnPW.setText("Mật khẩu không được trống!!!");
            if (!phone.matches("\\d{10}")) {
                wnP.setText("Số điện thoại không hộp lệ!!!");
            } else {
                wnP.setText("");
            }
        } else if ((phone.equals("") || phone.equals("Nhập số điện thoại"))) {
            wnUS.setText("");
            wnPW.setText("");
            wnP.setText("Số điện thoại không được trống!!!");
        } else {
            if (!phone.matches("\\d{10}")) {
                wnUS.setText("");
                wnPW.setText("");
                wnP.setText("Số điện thoại không hộp lệ!!!");
                return;
            } else {
                wnUS.setText("");
                wnP.setText("");
                wnPW.setText("");
            }
            if (password.length() < 6) {
                wnUS.setText("");
                wnP.setText("");
                wnPW.setText("Mật khẩu phải dài hơn 6 ký tự!!!");
                return;
            } else {
                wnUS.setText("");
                wnP.setText("");
                wnPW.setText("");
            }
            register(username, password, phone);
            if (regErr == 1) {
                wnUS.setText("Tên đăng nhập đã tồn tại!!!");
            } else if (regErr == 2) {
                wnP.setText("Số điện thoại đã được sử dụng!!!");
            } else {
                RegisterSuccess registerSuccess = new RegisterSuccess(this, true);
                registerSuccess.setVisible(true);
            }
        }

    }//GEN-LAST:event_registerBtnActionPerformed

    private void usernameTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_usernameTextFocusGained
        if (usernameText.getText().equals("Nhập tên đăng nhập")) {
            usernameText.setText("");
        }
    }//GEN-LAST:event_usernameTextFocusGained

    private void usernameTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_usernameTextFocusLost
        if (usernameText.getText().equals("")) {
            usernameText.setText("Nhập tên đăng nhập");
        }
    }//GEN-LAST:event_usernameTextFocusLost

    private void usernameTextMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usernameTextMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameTextMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Register().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    private javax.swing.JButton exitBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel login;
    private javax.swing.JLabel password;
    private javax.swing.JPasswordField passwordText;
    private javax.swing.JLabel phone;
    private javax.swing.JTextField phoneText;
    private javax.swing.JLabel register;
    private javax.swing.JButton registerBtn;
    private javax.swing.JPanel registerForm;
    private javax.swing.JCheckBox showpass;
    private javax.swing.JLabel username;
    private javax.swing.JTextField usernameText;
    private javax.swing.JLabel wnP;
    private javax.swing.JLabel wnPW;
    private javax.swing.JLabel wnUS;
    // End of variables declaration//GEN-END:variables

    private Object String(char[] password) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
