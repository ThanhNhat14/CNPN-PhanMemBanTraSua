/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View.LogRes.ManagerEmployee;

import java.awt.Point;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import static Controller.LogRes.ManagerEmployee.Login.login;
import java.awt.Frame;
import java.awt.event.KeyEvent;
import java.text.Normalizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author ngocn
 */
public class Login extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    private Point initialClick;

    public Login() {
        setUndecorated(true);
        setResizable(false);

        initComponents();

        //setLocationRelativeTo(null);
        background.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                // Lấy tọa độ chuột khi nhấn
                initialClick = e.getPoint();
            }

        });
        background.addMouseMotionListener(new MouseAdapter() {
            @Override
            public void mouseDragged(MouseEvent e) {
                // Lấy tọa độ chuột khi kéo
                int x = getLocation().x + e.getX() - initialClick.x;
                int y = getLocation().y + e.getY() - initialClick.y;

                // Di chuyển cửa sổ đến vị trí mới
                setLocation(x, y);
            }
        });
        wnPW.setText("");
    }

    void login1() {
        String username = usernameText.getText();
        String password = String.valueOf(passwordText.getPassword());
        if ((username.equals("") || username.equals("Nhập tên đăng nhập"))
                && (password.equals("") || password.equals("Nhập mật khẩu"))) {
            wnUS.setText("Tên đăng nhập không được trống!!!");
            wnPW.setText("Mật khẩu không được trống!!!");
            return;
        } else if (username.equals("") || username.equals("Nhập tên đăng nhập")) {
            wnPW.setText("");
            wnUS.setText("Tên đăng nhập không được trống!!!");
            return;
        } else if (password.equals("") || password.equals("Nhập mật khẩu")) {
            wnUS.setText("");
            wnPW.setText("Mật khẩu không được trống!!!");
            return;
        }
        String messager = login(username, password);
        if (Boolean.parseBoolean(messager)) {
            LoginSuccess loginSuccess = new LoginSuccess(this, true);
            loginSuccess.setVisible(true);
        } else {
            wnUS.setText("");
            wnPW.setText(messager);
        }
    }

    public static String removeAccents(String input) {
        String normalizedString = Normalizer.normalize(input, Normalizer.Form.NFD);
        normalizedString = normalizedString.replaceAll("[\\p{InCombiningDiacriticalMarks}]", "");
        normalizedString = normalizedString.replaceAll("Đ", "D").replaceAll("đ", "d");
        return normalizedString.toLowerCase();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        loginForm = new javax.swing.JPanel();
        login = new javax.swing.JLabel();
        username = new javax.swing.JLabel();
        usernameText = new javax.swing.JTextField();
        wnUS = new javax.swing.JLabel();
        password = new javax.swing.JLabel();
        passwordText = new javax.swing.JPasswordField();
        showpass = new javax.swing.JCheckBox();
        wnPW = new javax.swing.JLabel();
        exitBtn = new javax.swing.JButton();
        loginBtn = new javax.swing.JButton();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("LoginForm");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        loginForm.setBackground(new java.awt.Color(27, 43, 32));

        login.setFont(new java.awt.Font("Serif", 1, 48)); // NOI18N
        login.setForeground(new java.awt.Color(210, 154, 95));
        login.setText("Đăng nhập");
        login.setToolTipText("");

        username.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        username.setForeground(new java.awt.Color(210, 154, 95));
        username.setText("Tên đăng nhập:");

        usernameText.setBackground(new java.awt.Color(102, 102, 102));
        usernameText.setFont(new java.awt.Font("Serif", 1, 16)); // NOI18N
        usernameText.setForeground(new java.awt.Color(210, 154, 95));
        usernameText.setText("Nhập tên đăng nhập");
        usernameText.setToolTipText("Nhập tên đăng nhập");
        usernameText.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        usernameText.setMargin(new java.awt.Insets(2, 7, 2, 6));
        usernameText.setMinimumSize(new java.awt.Dimension(290, 40));
        usernameText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                usernameTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                usernameTextFocusLost(evt);
            }
        });
        usernameText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                usernameTextKeyPressed(evt);
            }
        });

        wnUS.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        wnUS.setForeground(new java.awt.Color(255, 0, 0));

        password.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        password.setForeground(new java.awt.Color(210, 154, 95));
        password.setText("Mật khẩu:");

        passwordText.setBackground(new java.awt.Color(102, 102, 102));
        passwordText.setFont(new java.awt.Font("Serif", 1, 16)); // NOI18N
        passwordText.setForeground(new java.awt.Color(210, 154, 95));
        passwordText.setText("Nhập mật khẩu");
        passwordText.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        passwordText.setEchoChar('\u0000');
        passwordText.setMargin(new java.awt.Insets(2, 7, 2, 6));
        passwordText.setMinimumSize(new java.awt.Dimension(290, 40));
        passwordText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                passwordTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                passwordTextFocusLost(evt);
            }
        });
        passwordText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordTextActionPerformed(evt);
            }
        });
        passwordText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passwordTextKeyPressed(evt);
            }
        });

        showpass.setBackground(new java.awt.Color(27, 43, 32));
        showpass.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        showpass.setForeground(new java.awt.Color(210, 154, 95));
        showpass.setText("Hiển thị mật khẩu");
        showpass.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                showpassStateChanged(evt);
            }
        });
        showpass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                showpassMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                showpassMouseExited(evt);
            }
        });
        showpass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showpassActionPerformed(evt);
            }
        });

        wnPW.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        wnPW.setForeground(new java.awt.Color(255, 0, 0));

        exitBtn.setBackground(new java.awt.Color(27, 43, 32));
        exitBtn.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        exitBtn.setForeground(new java.awt.Color(255, 0, 0));
        exitBtn.setText("Thoát");
        exitBtn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 2, true));
        exitBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exitBtn.setMaximumSize(new java.awt.Dimension(30, 35));
        exitBtn.setMinimumSize(new java.awt.Dimension(30, 35));
        exitBtn.setPreferredSize(new java.awt.Dimension(10, 35));
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });

        loginBtn.setBackground(new java.awt.Color(27, 43, 32));
        loginBtn.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        loginBtn.setForeground(new java.awt.Color(0, 255, 0));
        loginBtn.setText("Đăng nhập");
        loginBtn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 255, 0), 2, true));
        loginBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        loginBtn.setMaximumSize(new java.awt.Dimension(30, 35));
        loginBtn.setMinimumSize(new java.awt.Dimension(30, 35));
        loginBtn.setPreferredSize(new java.awt.Dimension(10, 35));
        loginBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout loginFormLayout = new javax.swing.GroupLayout(loginForm);
        loginForm.setLayout(loginFormLayout);
        loginFormLayout.setHorizontalGroup(
            loginFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginFormLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(loginFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(loginFormLayout.createSequentialGroup()
                        .addComponent(password)
                        .addGap(65, 65, 65)
                        .addGroup(loginFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(loginFormLayout.createSequentialGroup()
                                .addGroup(loginFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(wnPW, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(loginFormLayout.createSequentialGroup()
                                        .addComponent(loginBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(exitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(loginFormLayout.createSequentialGroup()
                                .addGroup(loginFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(showpass)
                                    .addComponent(passwordText, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 34, Short.MAX_VALUE))))
                    .addGroup(loginFormLayout.createSequentialGroup()
                        .addComponent(username)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(loginFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(wnUS, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(usernameText, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(loginFormLayout.createSequentialGroup()
                .addGap(131, 131, 131)
                .addComponent(login)
                .addGap(0, 146, Short.MAX_VALUE))
        );
        loginFormLayout.setVerticalGroup(
            loginFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginFormLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(login)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(loginFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(username)
                    .addComponent(usernameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(wnUS, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(loginFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(password)
                    .addGroup(loginFormLayout.createSequentialGroup()
                        .addComponent(passwordText, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(showpass)))
                .addGap(9, 9, 9)
                .addComponent(wnPW, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(loginFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loginBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(79, 79, 79))
        );

        getContentPane().add(loginForm, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 0, 500, 432));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/background.png"))); // NOI18N
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 768, 432));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void usernameTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_usernameTextFocusGained
        if (usernameText.getText().equals("Nhập tên đăng nhập")) {
            usernameText.setText("");
        }
    }//GEN-LAST:event_usernameTextFocusGained

    private void usernameTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_usernameTextFocusLost
        if (usernameText.getText().equals("")) {
            usernameText.setText("Nhập tên đăng nhập");
        }
    }//GEN-LAST:event_usernameTextFocusLost

    private void passwordTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordTextFocusGained

        showpass.setSelected(false);
        char[] inputPassword = passwordText.getPassword();
        String enteredPassword = new String(inputPassword);
        if (enteredPassword.equals("Nhập mật khẩu")) {
            passwordText.setText("");
            passwordText.setEchoChar('\u2022');
        } else {
            passwordText.setEchoChar('\u2022');
        }
    }//GEN-LAST:event_passwordTextFocusGained

    private void passwordTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordTextFocusLost
        char[] inputPassword = passwordText.getPassword();
        String enteredPassword = new String(inputPassword);

        if (enteredPassword.equals("")) {
            passwordText.setEchoChar('\u0000');
            passwordText.setText("Nhập mật khẩu");
        }
    }//GEN-LAST:event_passwordTextFocusLost

    private void passwordTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordTextActionPerformed

    private void showpassStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_showpassStateChanged

        char[] inputPassword = passwordText.getPassword();
        String enteredPassword = new String(inputPassword);
        if (!enteredPassword.equals("Nhập mật khẩu")) {
            if (showpass.isSelected()) {
                passwordText.setEchoChar('\u0000');
            } else {
                passwordText.setEchoChar('\u2022');
            }
        }

    }//GEN-LAST:event_showpassStateChanged

    private void showpassMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showpassMouseClicked

    }//GEN-LAST:event_showpassMouseClicked

    private void showpassMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showpassMouseExited

    }//GEN-LAST:event_showpassMouseExited

    private void showpassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showpassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_showpassActionPerformed

    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitBtnActionPerformed

    private void loginBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginBtnActionPerformed
        login1();
    }//GEN-LAST:event_loginBtnActionPerformed

    private void usernameTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usernameTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (removeAccents(String.valueOf(passwordText.getPassword())).equals("nhap mat khau")) {
                passwordText.requestFocus();
            } else {
                login1();
            }
        }
    }//GEN-LAST:event_usernameTextKeyPressed

    private void passwordTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (removeAccents(String.valueOf(usernameText.getText())).equals("nhap ten dang nhap")) {
                usernameText.requestFocus();
            } else {
                login1();
            }
        }
    }//GEN-LAST:event_passwordTextKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    private javax.swing.JButton exitBtn;
    private javax.swing.JLabel login;
    private javax.swing.JButton loginBtn;
    private javax.swing.JPanel loginForm;
    private javax.swing.JLabel password;
    private javax.swing.JPasswordField passwordText;
    private javax.swing.JCheckBox showpass;
    private javax.swing.JLabel username;
    private javax.swing.JTextField usernameText;
    private javax.swing.JLabel wnPW;
    private javax.swing.JLabel wnUS;
    // End of variables declaration//GEN-END:variables
}
